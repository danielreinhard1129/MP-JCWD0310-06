// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int           @id @default(autoincrement())
  fullName          String
  email             String        @unique
  password          String
  avatar            String?
  role              String        @default("user")
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  referral_code     String?       @unique
  point             Int
  point_expiredDate DateTime
  Event             Event[]
  Coupon            Coupon[]
  Transaction       Transaction[]

  @@map("users")
}

model Event {
  id            Int       @id @default(autoincrement())
  title         String
  description   String    @db.LongText()
  thumbnail_url String
  deletedAt     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  limit         Int
  isAvailable   Boolean   @default(true)
  start_date    DateTime
  end_date      DateTime?
  time          String
  location      String
  address       String?
  category      String
  price         Int

  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  Transaction Transaction?

  @@map("events")
}

model Coupon {
  id             Int           @id @default(autoincrement())
  code           String        @unique
  discountAmount Float
  expirationDate DateTime
  user           User?         @relation(fields: [userId], references: [id])
  userId         Int?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  Transaction    Transaction[]

  @@map("coupons")
}

model Transaction {
  id           Int               @id @default(autoincrement())
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  status       TransactionStatus @default(PENDING)
  qty          Int
  total        Int
  userId       Int
  eventId      Int               @unique
  paymentProof String            @default("")
  couponId     Int?

  coupon            Coupon?             @relation(fields: [couponId], references: [id])
  event             Event              @relation(fields: [eventId], references: [id])
  user              User               @relation(fields: [userId], references: [id])
  TransactionDetail TransactionDetail?

  @@map("transactions")
}

enum TransactionStatus {
  PENDING
  COMPLETE
  ERROR
  CANCELLED
}

model TransactionDetail {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  transactionId Int      @unique

  transaction Transaction @relation(fields: [transactionId], references: [id])

  @@map("transactionDetails")
}
